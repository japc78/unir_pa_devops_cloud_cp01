pipeline {
    agent any
    stages {
        stage('Get Code') {
            steps {
                git branch: 'develop', url: 'https://github.com/japc78/unir_pa_devops_cloud_cp01.git'
            }
        }

        stage('Build') {
            steps {
                sh("ls -la")
            }
        }

        stage('Test ') {
            parallel {
                stage('Test Unit') {
                    steps {
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            sh '''
                                export PYTHONPATH=$WORKSPACE
                                echo "PYTHONPATH is set to: $PYTHONPATH"
                                pytest --junitxml=result-unit.xml test/unit
                            '''
                        }
                    }
                }

                stage('Test Rest') {
                    steps {
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            sh '''
                                docker run --rm --network host -d --name wiremock \
                                --user root \
                                -v $WORKSPACE/test/wiremock/mappings:/home/wiremock/mappings \
                                wiremock/wiremock:latest \
                                --port 9090 \

                                sleep 3

                                export PYTHONPATH=$WORKSPACE
                                export FLASK_APP=app/api.py
                                flask run &

                                sleep 3

                                pytest --junitxml=result-rest.xml test/rest

                                docker stop wiremock
                            '''
                        }
                    }
                }
            }
        }

        stage('Results') {
            steps {
                junit('result*.xml')
            }
        }
    }
}